#!/bin/bash

# use: ./align.sh file_prefix cutadapt_dir 

# set arguments
x=$1
cutadapt_dir=$2

# set genome fasta
genome_fasta=/n/groups/churchman/mc348/TimelapseSeq/SeqFiles/K562_ensGRCh38_dm6_ercc_cat.fasta

# load required modules
module load gcc/6.2.0
module load star/2.7.0a
module load samtools/1.9
module load java/jdk-1.8u112
module load bedtools/2.27.1

#cd /n/groups/churchman/bms36/2022-11-04_RBP_KDs_ii/STAR/${x}

#gunzip *.gz

# be sure that --runThreadN and SBATCH -c (above) are the same
# --genomeDir is the path that contains all files generated by the --runMode genomeGenerate script 
echo "Aligning reads"
#STAR --runMode alignReads --runThreadN 4 --genomeDir /n/groups/churchman/bms36/genomes/mm10_dm6_ercc_grandslam --outSAMtype BAM Unsorted --outFilterMismatchNmax 300 --outFilterMismatchNoverReadLmax 0.3 --outFilterScoreMinOverLread 0.2 --outFilterMatchNminOverLread 0.2 --alignEndsType Local --readStrand Forward --outSAMattributes NM MD NH --readFilesIn ./*R1_cutadapt.fastq ./*R2_cutadapt.fastq
STAR --runMode alignReads --runThreadN 4 --genomeDir /n/groups/churchman/mc348/TimelapseSeq/SeqFiles/STAR-index_K562_MTmod_dm6_v2.7.0a --outSAMtype BAM Unsorted --outFilterMismatchNmax 15 --outFilterMismatchNoverReadLmax 0.09 --outFilterScoreMinOverLread 0.66 --outFilterMatchNminOverLread 0.66 --alignEndsType Local --readStrand Forward --outSAMattributes NM MD NH --readFilesCommand gunzip -c --readFilesIn ${cutadapt_dir}/${x}_R1_cutadapt.fastq.gz ${cutadapt_dir}/${x}_R2_cutadapt.fastq.gz
echo "Done"

# report read statistics
echo "Running samtools flagstat"
samtools flagstat -@ 3 Aligned.out.bam
echo "Done"

# remove: PCR and optical duplicates, secondary alignments, and supplementary alignments
echo "Removing duplicates, non-primary, and supplementary alignments"
samtools view -@ 3 -F 0x100 -o temp3.bam Aligned.out.bam
rm temp2.bam
samtools view -@ 3 -F 0x400 -o temp4.bam temp3.bam
rm temp3.bam
samtools view -@ 3 -F 0x800 -o temp5.bam temp4.bam
rm temp4.bam
echo "Done"

# remove reads with mates that are not mapped
echo "Removing reads with mates that are not mapped"
samtools view -@ 3 -F 0x8 -o temp6.bam temp5.bam
rm temp5.bam
echo "Done"

# report read statistics
echo "Running samtools flagstat"
samtools flagstat -@ 3 temp6.bam
echo "Done"

echo "Filtering mouse, Drosophila, and ERCC reads"
samtools view -@ 3 -b -L /n/groups/churchman/mc348/TimelapseSeq/SeqFiles/K562_h_noMT_chrNameLength.bed temp6.bam > filtered.human_noMT.bam
samtools view -@ 3 -b -L /n/groups/churchman/mc348/TimelapseSeq/SeqFiles/K562_h_MTonly_chrNameLength.bed temp6.bam > filtered.human_onlyMT.bam
samtools view -@ 3 -b -L /n/groups/churchman/mc348/TimelapseSeq/SeqFiles/K562_d_chrNameLength.bed temp6.bam > filtered.dros.bam
samtools view -@ 3 -b -L /n/groups/churchman/mc348/TimelapseSeq/SeqFiles/K562_e_chrNameLength.bed temp6.bam > filtered.ercc.bam
rm temp6.bam
echo "Done"

echo "Sorting and indexing reads"
samtools sort -@ 3 -o ${x}_sort.human_noMT.bam filtered.human_noMT.bam
samtools index -@ 3 ${x}_sort.human_noMT.bam
samtools sort -@ 3 -o ${x}_sort.human_onlyMT.bam filtered.human_onlyMT.bam
samtools index -@ 3 ${x}_sort.human_onlyMT.bam
samtools sort -@ 3 -o ${x}_sort.dros.bam filtered.dros.bam
samtools index -@ 3 ${x}_sort.dros.bam
samtools sort -@ 3 -o ${x}_sort.ercc.bam filtered.ercc.bam
samtools index -@ 3 ${x}_sort.ercc.bam

rm filtered.human_noMT.bam
rm filtered.human_onlyMT.bam
rm filtered.dros.bam
rm filtered.ercc.bam

echo "Done"